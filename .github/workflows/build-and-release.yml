name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: QuickLook.Plugin.SqliteViewer.sln
  
  # Configuration type to build.
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Fetch full history for GitVersion
        fetch-depth: 0
        submodules: true

    - name: Setup .NET Framework
      uses: microsoft/setup-msbuild@v2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2

    - name: Restore NuGet packages
      run: nuget restore ${{ env.SOLUTION_FILE_PATH }}

    - name: Update version
      shell: powershell
      run: |
        Set-Location Scripts
        .\update-version.ps1

    - name: Build solution
      run: msbuild /m /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:Platform="Any CPU" ${{ env.SOLUTION_FILE_PATH }}

    - name: Create plugin package
      shell: powershell
      run: |
        Set-Location Scripts
        .\pack-zip.ps1

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: QuickLook.Plugin.SqliteViewer-${{ github.sha }}
        path: QuickLook.Plugin.SqliteViewer.qlplugin
        retention-days: 30

    - name: Upload release binaries
      uses: actions/upload-artifact@v4
      with:
        name: Release-Binaries-${{ github.sha }}
        path: bin/Release/
        retention-days: 30

  release:
    needs: build
    runs-on: windows-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: QuickLook.Plugin.SqliteViewer-${{ github.sha }}
    
    - name: Verify plugin file exists
      shell: bash
      run: |
        if [ ! -f "QuickLook.Plugin.SqliteViewer.qlplugin" ]; then
          echo "❌ Error: QuickLook.Plugin.SqliteViewer.qlplugin not found!"
          echo "Available files:"
          ls -la
          exit 1
        fi
        echo "✅ Plugin file found: QuickLook.Plugin.SqliteViewer.qlplugin"
        echo "File size: $(ls -lh QuickLook.Plugin.SqliteViewer.qlplugin | awk '{print $5}')"

    - name: Get version info
      id: version_info
      shell: bash
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          # For tagged releases
          TAG_NAME=${GITHUB_REF#refs/tags/}
          RELEASE_NAME="QuickLook SQLite Viewer $TAG_NAME"
          IS_PRERELEASE=false
          if [[ "$TAG_NAME" == *"-"* ]]; then
            IS_PRERELEASE=true
          fi
        else
          # For main branch builds - create pre-release
          COMMIT_SHORT=$(echo $GITHUB_SHA | cut -c1-7)
          BUILD_NUMBER=$(date +%Y%m%d%H%M)
          TAG_NAME="v0.3.0-dev.$BUILD_NUMBER"
          RELEASE_NAME="QuickLook SQLite Viewer Development Build (${COMMIT_SHORT})"
          IS_PRERELEASE=true
        fi
        
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_OUTPUT
        echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_OUTPUT
        echo "IS_PRERELEASE=$IS_PRERELEASE" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version_info.outputs.TAG_NAME }}
        name: ${{ steps.version_info.outputs.RELEASE_NAME }}
        draft: false
        prerelease: ${{ steps.version_info.outputs.IS_PRERELEASE }}
        files: QuickLook.Plugin.SqliteViewer.qlplugin
        generate_release_notes: true
        body: |
          ## ${{ steps.version_info.outputs.RELEASE_NAME }}
          
          ### Features
          - Enhanced SQLite database viewing with tabbed interface
          - Sidebar navigation for quick table access
          - Performance optimizations for large databases
          - Modern UI with dark theme support
          - Custom SQL query execution
          - Configurable logging and window sizing
          
          ### Installation
          1. Download the `QuickLook.Plugin.SqliteViewer.qlplugin` file below
          2. Copy it to your QuickLook plugins directory
          3. Restart QuickLook
          
          ### System Requirements
          - Windows 10/11
          - .NET Framework 4.6.2 or higher
          - QuickLook 3.7 or higher
          
          ### Build Information
          - Commit: ${{ github.sha }}
          - Build Date: ${{ github.run_started_at }}